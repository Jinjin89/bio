[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home | Bioinfor",
    "section": "",
    "text": "How are your there?\n\n\nBe patient?"
  },
  {
    "objectID": "qmd/bioinformatics/genome.html",
    "href": "qmd/bioinformatics/genome.html",
    "title": "Neocleotide",
    "section": "",
    "text": "compare the contigs and scaffolds\n\n\n\n\n\n\n\n\nComparison\nContig\nScalffold\n\n\n\n\nSize\nsmall\nlarge\n\n\nConnectivity\nContigs are often disconnected from each other and represent independent segments of the genome\nconnected by gaps that represent regions of the genome that have not been sequenced or assembled\n\n\nAccuracy\naccurate\nmore prone to errors\n\n\nUtility\nidentifying individual genes, exons, and other genomic features\nstudying the larger-scale structure and organization of the genome\n\n\n\n\n\n\n\n\nglobal statistics\n\n\n\nStats\nvalues\n\n\n\n\nNumber of regions with alternate loci or patches\n207\n\n\nTotal sequence length\n3,099,734,149\n\n\nTotal ungapped length\n2,948,611,470\n\n\nGaps between scaffolds\n349\n\n\nNumber of scaffolds\n473\n\n\nScaffold N50\n67,794,873\n\n\nScaffold L50\n16\n\n\nNumber of contigs\n999\n\n\nContig N50\n57,879,411\n\n\nContig L50\n18\n\n\nTotal number of chromosomes and plasmids\n24\n\n\nNumber of component sequences (WGS or clone)\n35,614\n\n\n\nPrimary assembly\n\nAssembled chromosomes for hg38 are chromosomes 1–22 (chr1–chr22), X (chrX), Y (chrY) and Mitochondrial (chrM).\nUnlocalized sequences (known to belong on a specific chromosome but with unknown order or orientation) are identified by the _random suffix.\nUnplaced sequences (chromosome of origin unknown) are identified by the chrU_ prefix.\n\nGRCh38 ALT contigs, decoy contig\nIn genomics, a genome reference is a collection of genetic sequences that represents the consensus sequence of a species or a population. However, due to the complexity of many genomes, it is often necessary to include additional sequences in the reference to improve its accuracy or completeness. Two types of additional sequences commonly included in genome references are ALT contigs and decoy contigs.\nALT contigs, also known as alternative contigs, are additional contigs that represent alternative versions of genomic regions that are highly variable or difficult to assemble. These regions may include centromeres, telomeres, or segmental duplications. ALT contigs are typically labeled with an identifier that distinguishes them from the primary reference contigs, which are usually labeled with sequential numbers or letters.\nDecoy contigs, on the other hand, are artificial sequences that are added to the reference to represent regions that are likely to be mistaken for real genomic regions during the sequencing or mapping process. These regions may include repetitive elements, transposable elements, or microbial contaminants. Decoy contigs are typically designed to be similar in length and complexity to real genomic regions, but with unique sequence content that can be used to distinguish them from real genomic regions.\nThe inclusion of ALT contigs and decoy contigs in genome references can help improve the accuracy and completeness of genomic analyses, such as variant calling and read mapping, by reducing the number of false positives and false negatives.\nScaffolds?\n\nPlaced scaffolds: the scaffolds have been placed within a chromosome.\nUnlocalized scaffolds: although the chromosome within which the scaffold occurs is known, the scaffold’s position or orientation is not known.\nUnplaced scaffolds: it is not known which chromosome the scaffold belongs to.\n\nwhat is the masked and soft-masked sequence types?\n\n‘dna’ - unmasked genomic DNA sequences.\n‘dna_rm’ - masked genomic DNA. Interspersed repeats and low complexity regions are detected with the RepeatMasker tool and masked by replacing repeats with ’N’s.\n‘dna_sm’ - soft-masked genomic DNA. All repeats and low complexity regions have been replaced with lowercased versions of their nucleic base\n\nreference\n\nhttps://gatk.broadinstitute.org/hc/en-us/articles/360035890951-Human-genome-reference-builds-GRCh38-or-hg38-b37-hg19\nhttps://www.ncbi.nlm.nih.gov/grc/help/definitions/\nhttps://groups.google.com/a/soe.ucsc.edu/g/genome/c/Pvl3eAH0e_Y"
  },
  {
    "objectID": "qmd/bioinformatics/genome.html#mirna",
    "href": "qmd/bioinformatics/genome.html#mirna",
    "title": "Neocleotide",
    "section": "miRNA",
    "text": "miRNA"
  },
  {
    "objectID": "qmd/bioinformatics/genome.html#lncrna",
    "href": "qmd/bioinformatics/genome.html#lncrna",
    "title": "Neocleotide",
    "section": "lncRNA",
    "text": "lncRNA"
  },
  {
    "objectID": "qmd/bioinformatics/index.html",
    "href": "qmd/bioinformatics/index.html",
    "title": "Bioinformatics",
    "section": "",
    "text": "Bioinformatics tutorial"
  },
  {
    "objectID": "qmd/bioinformatics/data_format.html",
    "href": "qmd/bioinformatics/data_format.html",
    "title": "data format",
    "section": "",
    "text": "Proteins\n\n\nQ&A\n\nwhat is difference between ensembl and UCSC?"
  },
  {
    "objectID": "qmd/bioinformatics/ncbi.html",
    "href": "qmd/bioinformatics/ncbi.html",
    "title": "NCBI",
    "section": "",
    "text": "https://www.ncbi.nlm.nih.gov/books/NBK54016/\nhttps://www.ncbi.nlm.nih.gov/bioproject/\n\n\n\n\n\n\n\nWhat can we retrive from gene database?\nGene supplies gene-specific connections in the nexus of map, sequence, expression, structure, function, citation, and homology data.\n\ngene\npublished papers\nsnps\ngeneRIF: gene referene into functions\nGene ontology\n\nWhat is refeseq?\n\nIt is a database\nwhen you search with NCBI Gene, there are filter options which you can select RefSeq/RefSeqGene/Ensembl and so on.\n\ntranscript\n\nN…: experiment validated transcript\nX…: predicted transcript\n\n\n\n\n\nkeywords: variant, variant classification(Benign/Likely Benign; Uncertain(VUS);Likely Pathogenic/Pathogenic)\n\nhow to use clinvar?\n\nsearch in https://www.ncbi.nlm.nih.gov/clinvar/\nE-utilities and Entrez Direct\n\nhow download clinvar database?\n\nhttps://ftp.ncbi.nlm.nih.gov/pub/clinvar/\nhttps://ftp.ncbi.nlm.nih.gov/pub/clinvar/tab_delimited\nhttps://ftp.ncbi.nlm.nih.gov/pub/clinvar/tab_delimited/\nhttps://ftp.ncbi.nlm.nih.gov/pub/clinvar/xml/\n\n\n\n\n\n\nupload a sequence and we could get the conserved domains"
  },
  {
    "objectID": "qmd/bioinformatics/ncbi.html#blast",
    "href": "qmd/bioinformatics/ncbi.html#blast",
    "title": "NCBI",
    "section": "2.1 BLAST",
    "text": "2.1 BLAST"
  },
  {
    "objectID": "qmd/bioinformatics/ncbi.html#comparative-genome-viewer",
    "href": "qmd/bioinformatics/ncbi.html#comparative-genome-viewer",
    "title": "NCBI",
    "section": "2.2 Comparative Genome Viewer",
    "text": "2.2 Comparative Genome Viewer"
  },
  {
    "objectID": "qmd/bioinformatics/ncbi.html#e-utilities",
    "href": "qmd/bioinformatics/ncbi.html#e-utilities",
    "title": "NCBI",
    "section": "2.3 E-utilities",
    "text": "2.3 E-utilities\n\nNine E-utilities\n\nEInfo –> database statistics\nESearch –> text search\nEPost –> UID uploads\nESummary –> document summary downloads\nEFetch –> data record downloads\nELink –> Entrez links\n-related: Neighbors in same database\n-target: Links in different database\n-cited: reference to this parer(pubmed)\n-cites: publication reference list\n-cmd: history,neighbor,acheck\nEGQuery –> global query\nESpell –> spelling suggestions\nEciMatch –> batch citation searching in PubMed\n\npipeline\n\nRetrieving data records matching an Entrez query\n\nESearch -> Esummary\nEsearch - > EFetch\n\nRetrieving data records matching a list of UIDs\n\nEsearch -> ELink\nEPost -> ELink\n\nFinding UIDs linked to a set of records\n\nEPost -> ESearch\nELikn -> ESearch\n\nLimiting a set of records with an Entrez query\n\nESearch -> ELink -> ESummary\nESearch -> ELink -> EFetch\n\nRetrieving data records in database B linked to records in database A matching an Entrez query\n\nEPost -> ESearch -> ESummary\nEPOst -> ESearch -> EFetch\n\nRetrieving data records from a subset of an ID list defined by an Entrez query\n\nEPost -> ESearch -> ESummary\nEPost -> ESearch -> EFetch\n\nRetrieving a set of data records, defined by an Entrez query, in database B from a larger set of records linked to a list of UIDs in database A\n\nEPost -> ELink -> ESearch -> ESummary\nEPost -> ELink -> ESearch -> EFetch\n\n\nEntrez Direct: E-utilities on the Unix Command Line\n\nHow to add keys\nexport NCBI_API_KEY=unique_api_key\nresources\n\nEntrez Unique Identifiers (UIDs) for selected databases\n\nexample\n\nsearch pubmed\n# 1) examples context \"NLRP3 AND TCGA\"\nesearch -db pubmed -query \"NLRP3 AND TCGA\" | esummary\n\n# 2) search with date options\nesearch -db pubmed -query \"NLRP3 AND TCGA\" -datetype PDAT -mindate 2022 -maxdate 2023\n\n# 3) sort by revelence or title or pub datetype\nesearch -db pubmed -query \"NLRP3 AND TCGA\" -datetype PDAT -mindate 2021 -maxdate 2023 -sort \"Pub Date\" |\nefetch -format xml\n\n# 4) search pubmed, fetch the format, and extract the authors,your could use `-sep` to seprate element,or `-tab` to sperate block\nesearch -db pubmed -query \"selective serotonin reuptake inhibitor\" |\nefetch -format xml |\nxtract -pattern PubmedArticle -block Author -element LastName, Initials\n\n# 5) search pubmed with text, return the medline format\nesearch -db pubmed -query \"NLRP3 AND TCGA\" | efetch -format medline\n\n# 6) search pubmed with text and extract the 1) journal 2) title  3) abastrct 4) author 5) keyword\nesearch -db pubmed -query \"NLRP3 AND TCGA\" -datetype PDAT -mindate 2021 -maxdate 2023 -sort \"Pub Date\" |\nefetch -format xml |\nxtract -pattern PubmedArticle \\\n-block Journal  -element \"Title\" \\\n-block Article -element \"ArticleTitle\" \\\n-block Author -sep \" \" -tab \", \" -element Initials,LastName \\\n-block KeywordList -sep \",\" -element \"Keyword\" \\\n-block Abstract -element \"AbstractText\"\n\n# 7) search pubmed text, and get the related results\nesearch -db pubmed -query \"NLRP3 AND TCGA\" -datetype PDAT -mindate 2021 -maxdate 2023 -sort \"Pub Date\" |\nelink -related | \nefetch -xml\n\n# 8) search pubmed text, and get the related paper\nesearch -db pubmed -query \"NLRP3 AND TCGA\" -datetype PDAT -mindate 2021 -maxdate 2023 -sort \"Pub Date\" |\nelink -target pubmed \n\n# 9) search pubmed text, and get the related genes/protein...\nesearch -db pubmed -query \"NLRP3 AND TCGA\" -datetype PDAT -mindate 2021 -maxdate 2023 -sort \"Pub Date\" |\nelink -target gene \n\nesearch -db pubmed -query \"NLRP3 AND TCGA\" -datetype PDAT -mindate 2021 -maxdate 2023 -sort \"Pub Date\" |\nelink -target protein \nsearch gene\n# 1) search gene in Y in homo sampiens, use other programming tools to find the gene in forward or reverse strand\nesearch -db gene -query  \"Homo sapiens [ORGN] AND Y [CHR]\" |\nefilter -query \"alive [PROP]\" |\nesummary |\nxtract -pattern DocumentSummary -NAME Name \\\n-block GenomicInfoType -match \"ChrLoc:Y\" \\\n-element \"&NAME\", ChrLoc, ChrAccVer, ChrStart, ChrStop\n\n# 2) search a gene get its  transcript\nesearch -db gene -query \"TP53[gene name] AND Homo sapiens[ORGN]\"|\nefetch -format fasta\nsearch proteins\nsearch proteins for each genes using elink\nesearch -db gene -query \"NLPR3 AND Homo sapiens [ORGN] AND alive [prop]\"|\nelink -target protein -name gene_protein_refseq -cmd neighbor | \nxtract -pattern LinkSet -block IdList -element Id -block LinkSetDb -element Id\nxtract tips\n\npattern  with capitals, create a variable , invoke it with &STRINGS\nA slash (/) to indicate Parent/Child construction\nesearch -db pubmed -query \"NLRP3 AND TCGA\" -datetype PDAT -mindate 2021 -maxdate 2023 -sort \"Pub Date\" |\nefetch -format xml |\nxtract -pattern PubmedArticle -element PubDate/Year\n\nOthers\n\nalive[prop]: currently alive"
  },
  {
    "objectID": "qmd/bioinformatics/ncbi.html#xml-and-xml2",
    "href": "qmd/bioinformatics/ncbi.html#xml-and-xml2",
    "title": "NCBI",
    "section": "2.4 xml and xml2",
    "text": "2.4 xml and xml2"
  },
  {
    "objectID": "qmd/bioinformatics/tcga.html",
    "href": "qmd/bioinformatics/tcga.html",
    "title": "TCGA",
    "section": "",
    "text": "Diagnostic Slide\nTissue Slide\nWGX\nWXS\nRNA-seq\nmiRNA-seq\nATAC-seq\nGenotyping Array\nMethylation Array\n\n\n\n\nhttps://pathsocjournals.onlinelibrary.wiley.com/doi/full/10.1002/path.5028"
  },
  {
    "objectID": "qmd/bioinformatics/tcga.html#tcgabiolinks",
    "href": "qmd/bioinformatics/tcga.html#tcgabiolinks",
    "title": "TCGA",
    "section": "TCGAbiolinks",
    "text": "TCGAbiolinks"
  },
  {
    "objectID": "qmd/bioinformatics/tcga.html#data_transfer_tool",
    "href": "qmd/bioinformatics/tcga.html#data_transfer_tool",
    "title": "TCGA",
    "section": "Data_Transfer_Tool",
    "text": "Data_Transfer_Tool\n\ndownload the manifest\ndownload with gdc-client (redo with split manifest)\n#!/bin/bash\nusage ()\n{\necho 'Usage : command <manifest.file> <cores>'\nexit\n}\n\nif [ $# != 2 ];then\nusage\nfi \n# 1) parrelle using xargs; 2) download with gdc-client\nwc -l $1 >> logs.txt\ntail -n +2 $1 | \\\ncut -f1 |\\\nxargs -n 1 -P $2 \\\n/home/keke/app/conda/envs/tcga/bin/gdc-client download &\nwait\n# 3) calculate time\nend=`date +%s`\nruntime=$((end-start))\necho \">>>Running Finished....\" >> logs.txt\necho \">>>Running times is ....\" >> logs.txt\necho $runtime >>logs.txt"
  },
  {
    "objectID": "qmd/bioinformatics/tcga.html#gdc-application-programming-interface-api",
    "href": "qmd/bioinformatics/tcga.html#gdc-application-programming-interface-api",
    "title": "TCGA",
    "section": "gdc-application-programming-interface-api",
    "text": "gdc-application-programming-interface-api\nPASS"
  },
  {
    "objectID": "qmd/ml/index.html",
    "href": "qmd/ml/index.html",
    "title": "Machine learning",
    "section": "",
    "text": "Machine learning"
  },
  {
    "objectID": "qmd/tools/index.html",
    "href": "qmd/tools/index.html",
    "title": "Tools",
    "section": "",
    "text": "This is about useful tools that could help improve us to do bioinformatics job."
  },
  {
    "objectID": "qmd/sas/index.html",
    "href": "qmd/sas/index.html",
    "title": "SAS",
    "section": "",
    "text": "What is SAS"
  },
  {
    "objectID": "qmd/ml/microscopist.html",
    "href": "qmd/ml/microscopist.html",
    "title": "Python for microscopist",
    "section": "",
    "text": "processing HE\nprocessing immune staining"
  },
  {
    "objectID": "qmd/tools/git.html",
    "href": "qmd/tools/git.html",
    "title": "git",
    "section": "",
    "text": "Q&A\n\ngit globa options\n# show global options\ngit config --list\n\n# set git editor\ngit config --global core.editor \"code --wait\"\ngit config -e \ngit config --global -e \nget git status short\ngit status \ngit status -s\ncreate new branch\n# create new brance\ngit checkout -b <newbranch>\n\n# back to mater\ngit checkout master\n\n# merge new brache into master(should be in master branche)\ngit merge <newbranch>\nclone with ssh\ngit clone username@ip_address:/path/to/your/git\nbuild the data\n# 1) build new data\ngit init\n\n# 2) rename branch\ngit rename -m master current\n\n# 3) add remote data\ngit remote add <repo-name> username@ip_address:/path/to/your/git\n\n# 4) pull or push\ngit pull \ngit push"
  },
  {
    "objectID": "qmd/tools/restful.html",
    "href": "qmd/tools/restful.html",
    "title": "restful",
    "section": "",
    "text": "what is restful api\nThe full name is …\nHow to use it (if websites have api)?\nconstruct the paper\nAre there tools available that would make this simple for us?\nHow to achieve/implement it with Python programming?\nusing ensemle api"
  },
  {
    "objectID": "qmd/tools/quarto_diagram.html",
    "href": "qmd/tools/quarto_diagram.html",
    "title": "quarto diagram",
    "section": "",
    "text": "Graphviz\n\n\n\n\n\n\n\nG\n\n  \n\nrun\n\n run   \n\nintr\n\n intr   \n\nrun–intr\n\n   \n\nkernel\n\n kernel   \n\nrun–kernel\n\n   \n\nrunbl\n\n runbl   \n\nintr–runbl\n\n   \n\nrunbl–run\n\n   \n\nzombie\n\n zombie   \n\nkernel–zombie\n\n   \n\nsleep\n\n sleep   \n\nkernel–sleep\n\n   \n\nrunmem\n\n runmem   \n\nkernel–runmem\n\n   \n\nsleep–runmem\n\n   \n\nswap\n\n swap   \n\nsleep–swap\n\n   \n\nrunswap\n\n runswap   \n\nswap–runswap\n\n   \n\nrunswap–runmem\n\n   \n\nnew\n\n new   \n\nrunswap–new\n\n   \n\nnew–runmem"
  },
  {
    "objectID": "qmd/bioinformatics/sc.html",
    "href": "qmd/bioinformatics/sc.html",
    "title": "single cell",
    "section": "",
    "text": "Guidelines for annotate single cell?\nhttps://sci-hub.mksa.top/10.1038/s41596-021-00534-0\nthree steps\n 1. annotate use predefined set of marker genes\n\n     * marker based tools\n\n     * reference based tools\n\n 2.  manual annotation\n\n     * lower confidence, conflicting or absent cell labels, expert manual annotation is required\n\n     * \n\n 3. verification(1. other methods, 2. new validation experiments)\n\n     * statistical methods\n\n     * expert"
  },
  {
    "objectID": "qmd/tools/quarto_tools.html",
    "href": "qmd/tools/quarto_tools.html",
    "title": "quarto tools",
    "section": "",
    "text": "citatation\n\nyour should prepare\n\ncsl file: download from github\nhttps://github.com/citation-style-language/styles\nbib: you could prepare using endnote\n@article{knuth:1984,\n  title={Literate Programming},\n  author={Donald E. Knuth},\n  journal={The Computer Journal},\n  volume={27},\n  number={2},\n  pages={97--111},\n  year={1984},\n  publisher={Oxford University Press}\n}\n\ninclude it in the qmd yaml header; use with [@index] ; insert the reference\n---\ntitle: \"cite demo\"\nbibliography: references.bib\n---\nsome words[@knuth:1984]\n\n## References\n::: {#refs}\n:::"
  },
  {
    "objectID": "qmd/tools/r_args.html",
    "href": "qmd/tools/r_args.html",
    "title": "how to use pass argument in R?",
    "section": "",
    "text": "what is {} {{}}?\n\n\nwhat is parse/eval/substitue?\n\n\nIn dplyr, what is vars, across, everything?"
  },
  {
    "objectID": "qmd/tools/nginx.html",
    "href": "qmd/tools/nginx.html",
    "title": "nginx",
    "section": "",
    "text": "perfrom\n\nnginx.conf contains\n\nhttp serve the directory\nevents\nMINE\nnigix comes with default MINE types\nlocation\nalias\ntry_files\nrewrite and redirect\n\nhttp {\n    # MINE teypes\n    #types {\n    #    text/css css;\n    #    text/html html;\n    #}\n\n    include mime.types\n\n    # server\n    server {\n        listen 80;\n        root /path;\n\n        # get locations\n        location /fruits{\n            root /path ;\n        }\n\n        location /carbs{\n            alias /path/fruits;\n\n        }\n\n        # try files\n        location /veges{\n            root /path;\n            try_files /veges/vege.html /veges/index.html = 404;\n        }\n\n        # count regular expression ~* => regular expression\n        location ~* /count/[0-9]{\n            root /path\n            try_files /index.html =404;\n        }\n\n        # return\n        location /crops {\n            return 307 /fruits;\n        }\n\n        # rewrite/redirect\n        rewrite ^/number/(\\w+) /counts/$1\n    }\n}\nload balancer"
  },
  {
    "objectID": "qmd/bioinformatics/ensembl.html",
    "href": "qmd/bioinformatics/ensembl.html",
    "title": "Ensembl",
    "section": "",
    "text": "How?"
  },
  {
    "objectID": "qmd/pipeline/mrna.html",
    "href": "qmd/pipeline/mrna.html",
    "title": "mRNA pipline",
    "section": "",
    "text": "References"
  },
  {
    "objectID": "qmd/tools/network.html",
    "href": "qmd/tools/network.html",
    "title": "Network",
    "section": "",
    "text": "how to proxy?\nwho to reverse proxy?\nhow to add https\nnginx.conf contains\n\nhttp serve the directory\nevents\nMINE\nnigix comes with default MINE types\nlocation\nalias\ntry_files\nrewrite and redirect\n\nhttp {\n    # MINE teypes\n    #types {\n    #    text/css css;\n    #    text/html html;\n    #}\n\n    include mime.types\n\n    # server\n    server {\n        listen 80;\n        root /path;\n\n        # get locations\n        location /fruits{\n            root /path ;\n        }\n\n        location /carbs{\n            alias /path/fruits;\n\n        }\n\n        # try files\n        location /veges{\n            root /path;\n            try_files /veges/vege.html /veges/index.html = 404;\n        }\n\n        # count regular expression ~* => regular expression\n        location ~* /count/[0-9]{\n            root /path\n            try_files /index.html =404;\n        }\n\n        # return\n        location /crops {\n            return 307 /fruits;\n        }\n\n        # rewrite/redirect\n        rewrite ^/number/(\\w+) /counts/$1\n    }\n}\nload balancer"
  },
  {
    "objectID": "qmd/tools/docker.html",
    "href": "qmd/tools/docker.html",
    "title": "docker",
    "section": "",
    "text": "rstudio\n\nHave a rstudio in docker(version=4.2)\n\nhttps://rocker-project.org/images/versioned/rstudio.html\nhttps://hub.docker.com/r/rocker/rstudio\n# pull images (Make sure the version is what you want)\ndocker pull rocker/rstudio:4.2\n\n# run it (should not change the image port in this case)\ndocker run --rm -ti -p 8686:8787 rocker/rstudio:4.2\n\n# run it with user/password\n\n# stop it \ndocker stop <CONTAINER ID>\n\nhow to access using public ip address?"
  },
  {
    "objectID": "qmd/tools/r.html",
    "href": "qmd/tools/r.html",
    "title": "R",
    "section": "",
    "text": "what is call2\n\n# call2\ncall2(\"fun_name\",1,2,3)\nfun_name(1,2,3)\n\n\n\nexpr/enexpr and eval\n\nstring_math <- function(x) {\n  e <- env(\n    caller_env(),\n    `+` = function(x, y) paste0(x, y),\n    `*` = function(x, y) strrep(x, y)\n  )\n\n  eval(enexpr(x), e)\n}\n\nname <- \"Hadley\"\nstring_math(\"Hello \" + name)\n#> [1] \"Hello Hadley\"\nstring_math((\"x\" * 2 + \"-y\") * 3)\n#> [1] \"xx-yxx-yxx-y\"\n\n\n\n\n\n\n\n\n\nsubstittue <-> unquote"
  },
  {
    "objectID": "qmd/pipeline/rna.html",
    "href": "qmd/pipeline/rna.html",
    "title": "RNA pipline",
    "section": "",
    "text": "The GDC mRNA quantification analysis pipeline measures gene level expression with STAR as raw read counts.\nfor details about pipeline, please view https://docs.gdc.cancer.gov/Data/Bioinformatics_Pipelines/Expression_mRNA_Pipeline/\nfor details about STAR, plesae view https://raw.githubusercontent.com/alexdobin/STAR/master/doc/STARmanual.pdf\nIn this chapter@misc\n\nfirst summarise introduce the alignment\n\nSTAR\nbowtie\n\nWhat is RSEM?\nsamol\n\nSalmon\n\n\n\n\nflowchart TD\n    input[fastq]\n    output[tpm/fpkm/count]\n\n    input --> output"
  },
  {
    "objectID": "qmd/pipeline/rna.html#star",
    "href": "qmd/pipeline/rna.html#star",
    "title": "RNA pipline",
    "section": "STAR",
    "text": "STAR"
  },
  {
    "objectID": "qmd/pipeline/rna.html#some-preparations-about-star",
    "href": "qmd/pipeline/rna.html#some-preparations-about-star",
    "title": "RNA pipline",
    "section": "Some preparations about STAR",
    "text": "Some preparations about STAR\n1. strand information\n\n2-pass mode\n\n    * more splices reads mapping"
  },
  {
    "objectID": "qmd/pipeline/rna.html#rsem",
    "href": "qmd/pipeline/rna.html#rsem",
    "title": "RNA pipline",
    "section": "RSEM",
    "text": "RSEM"
  },
  {
    "objectID": "qmd/pipeline/rna.html#kallisto",
    "href": "qmd/pipeline/rna.html#kallisto",
    "title": "RNA pipline",
    "section": "kallisto",
    "text": "kallisto"
  },
  {
    "objectID": "qmd/tools/network.html#install",
    "href": "qmd/tools/network.html#install",
    "title": "Network",
    "section": "install",
    "text": "install\n\ninstall docker\n\nhttps://docs.docker.com/engine/install/binaries/\nhttps://www.kali.org/docs/containers/installing-docker-on-kali/\n\ndocker basic commnad\n\n# docker version\n# containers\ndocker ps\ndocker ps -a\ndocker stop <id>\n\n# showing images\ndocker images\n# remove images\ndocker rmi\n\n# pull images \ndocker pull <iamge>\n\n# pull and run images\ndocker run <iamge:tag>\n\n# run ubuntu\ndocker run ubuntu sleep 100 \n\n# run: attach detached\ndocker run -d <container>\n\ndocker attach <id>\n\n# inspect containder\ndocker inspect <id>\n\n# check logs\ndocker logs <id>\n\ndocker params\n\n-i: interactive mode\n-t: pesuodo terminal\n-p: port mapping\neach container has its own ip, which can only be acessed in containder host\n-v: volumn mappping -> data persistent\n-e: set enviroment variables\n\ncreate images\n\nFROM Ubuntu\n\nRUN apt-get update\nRUN apt-get install python\n\nRUN pip install flask\n\nCOPY . ???\n\nENTRYPOINT ???\n\nCMD [\"command\", \"param1\"]\ndocker build Dockerfile -t <image_name>"
  },
  {
    "objectID": "qmd/tools/network.html#docker-1",
    "href": "qmd/tools/network.html#docker-1",
    "title": "Network",
    "section": "Docker",
    "text": "Docker\n\nrstudio config\n\nHave a rstudio in docker(version=4.2)\n\nhttps://rocker-project.org/images/versioned/rstudio.html\nhttps://hub.docker.com/r/rocker/rstudio\n# pull images (Make sure the version is what you want)\ndocker pull rocker/rstudio:4.2\n\n# run it (should not change the image port in this case), with password\n# inorder to make it configuration persistent, your should map the /home/rstudio/ directory with the same directory(In which you saved the configurations previously)\ndocker run --rm -ti -e PASSWORD=<passwd> -v /home/keke/data/tutorial/docker/rs1:/home/rstudio/ -p 8686:8787 rocker/rstudio:4.2\n\n# how to make packages persistent and rstudio configs persistent \n# 1) Check the libs path `.libPaths()`\n# 2) rewrite the `.Renviron` with  `R_LIBS_USER` and `R_LIBS`\n# 3) relaod `R` and install the packages\n# 4) your could check the `r_lib` fold first then reload the docker images to see if the package could be reloaded\nmkdir ~/.Renviron\nR_LIBS_USER=/home/rstudio/r_lib\nR_LIBS=/home/rstudio/r_lib:/usr/local/lib/R/site-library:/usr/local/lib/R/library\n\n\n# mount a second volumn\ndocker run --rm -ti \\\n    -e PASSWORD=happy_password\\\n    -v /home/keke/data/tutorial/docker/rs1:/home/rstudio/\\\n    -v /home/keke/data/:/home/rstudio/data/\\\n    -p 8686:8787 \\\n    rocker/rstudio:4.2\n\n# run in background(--detached -d)\ndocker run --rm -ti \\\n    -e PASSWORD=happy_password\\\n    -d\\\n    -v /home/keke/data2/docker/rstudio/rs1:/home/rstudio/\\\n    -v /home/keke/data/:/home/rstudio/data/\\\n    -p 8686:8787 \\\n    rocker/rstudio:4.2\n    \n# stop it \ndocker stop <CONTAINER ID>\n\n\ndocker file permission"
  },
  {
    "objectID": "qmd/tools/network.html#docker-app",
    "href": "qmd/tools/network.html#docker-app",
    "title": "Network",
    "section": "Docker app",
    "text": "Docker app\n\nrstudio config\n\nHave a rstudio in docker(version=4.2)\n\nhttps://rocker-project.org/images/versioned/rstudio.html\nhttps://hub.docker.com/r/rocker/rstudio\n# pull images (Make sure the version is what you want)\ndocker pull rocker/rstudio:4.2\n\n# run it (should not change the image port in this case), with password\n# inorder to make it configuration persistent, your should map the /home/rstudio/ directory with the same directory(In which you saved the configurations previously)\ndocker run --rm -ti -e PASSWORD=<passwd> -v /home/keke/data/tutorial/docker/rs1:/home/rstudio/ -p 8686:8787 rocker/rstudio:4.2\n\n# how to make packages persistent and rstudio configs persistent \n# 1) Check the libs path `.libPaths()`\n# 2) rewrite the `.Renviron` with  `R_LIBS_USER` and `R_LIBS`\n# 3) relaod `R` and install the packages\n# 4) your could check the `r_lib` fold first then reload the docker images to see if the package could be reloaded\nmkdir ~/.Renviron\nR_LIBS_USER=/home/rstudio/r_lib\nR_LIBS=/home/rstudio/r_lib:/usr/local/lib/R/site-library:/usr/local/lib/R/library\n\n\n# mount a second volumn\ndocker run --rm -ti \\\n    -e PASSWORD=happy_password\\\n    -v /home/keke/data/tutorial/docker/rs1:/home/rstudio/\\\n    -v /home/keke/data/:/home/rstudio/data/\\\n    -p 8686:8787 \\\n    rocker/rstudio:4.2\n# run in background(--detached -d)\ndocker run --rm -ti \\\n    -e PASSWORD=happy_password\\\n    -d\\\n    -v /home/keke/data2/docker/rstudio/rs1:/home/rstudio/\\\n    -v /home/keke/data/:/home/rstudio/data/\\\n    -p 8686:8787 \\\n    rocker/rstudio:4.2\n\n# stop it \ndocker stop <CONTAINER ID>\n\n\nrun docker without root permission\n\n\nrun ubuntu\ndocker run ubuntu sleep 5\n\n\n\ndocker network\n* bride[default]:  `docker run ubuntu`\n\n* none:  `docker run ubuntu --network=none`\n\n* host:  `docker run ubuntu --network=host`\n\n* create sub network\n\n\nvoumnes\ndocker volumne create data_volumn\n* -v\n\n* --mount\n\n\ndocker-compose\n\n\ndocker registry\n\nprivate\n\ndocker run -d --name registry\n\ndocker image tag my-image localhost:5000/my-image\ndocker push localhost:5000/my-image\ndocker pull localhost:5000/my-image\n\n\norchestrate\n\n\ndocker swarm\ndocker service --replicas=3 my-web\n\n\n\nkubernetes\n\n\nexercise\n\ncreate a restudio docker image\nwith r-version\nwith package installation\ntry: conda integrations?"
  },
  {
    "objectID": "qmd/ml/microscopist.html#images-in-python",
    "href": "qmd/ml/microscopist.html#images-in-python",
    "title": "Python for microscopist",
    "section": "images in python",
    "text": "images in python"
  },
  {
    "objectID": "qmd/ml/microscopist.html#pil",
    "href": "qmd/ml/microscopist.html#pil",
    "title": "Python for microscopist",
    "section": "PIL",
    "text": "PIL\n\nresize: change the ratio\nthumbnail: orgin ratio\ncrop\npaste:\nrotate\n\n\nfrom PIL import Image\nimg = Image.open(images_file)\nprint(img.format)\nprint(img.mode)\nprint(img.size)\nprint(type(img))\n\n# resize\nplt.imshow(img)\nplt.show()\n\nsmall_img = img.resize((200,300))\nplt.imshow(small_img)\nplt.show()\n\n# thumbnail\nimg.thumbnail((200,300))\nprint(img.size)\nplt.imshow(img)\nplt.show()\n\nimg.thumbnail((1200,1300))\nprint(img.size)\nplt.imshow(img)\nplt.show()\n\n# crop\nimg = Image.open(images_file)\ncrop_img = img.crop((0,0,300,300))\n\nplt.imshow(crop_img)\nplt.show()\n\n# paste\nimg.paste(crop_img)\n\n# image\nimg.rotate(90)\n\nJPEG\nRGB\n(639, 513)\n<class 'PIL.JpegImagePlugin.JpegImageFile'>\n\n\n\n\n\n\n\n\n(200, 161)\n\n\n\n\n\n(200, 161)"
  },
  {
    "objectID": "qmd/ml/microscopist.html#skimage",
    "href": "qmd/ml/microscopist.html#skimage",
    "title": "Python for microscopist",
    "section": "skimage",
    "text": "skimage\n\nfrom skimage import io\nfrom matplotlib import pyplot as plt\nfrom skimage.transform import rescale,resize,downscale_local_mean\nimg = io.imread(images_file,as_gray=True)\nplt.imshow(img)\nplt.show()\n\n# rescale\nimg_rescale = rescale(img,1/4,anti_aliasing=True)\nplt.imshow(img_rescale)\nplt.show()\nimg_resize =resize(img,(200,200),anti_aliasing=True)\nplt.imshow(img_resize)\nplt.show()\nimg_down = downscale_local_mean(img,(4,3))\nplt.imshow(img_down)\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nedge detections\n\n\nfrom skimage.filters import roberts,sobel,scharr,prewitt\n\nfrom skimage.feature import canny\nedge_canny = canny(img,sigma = 5)\nplt.imshow(edge_canny)\nplt.show()\n\n\n\n\n\ndeconvolution\n\npsf: point spread function\n\nfrom skimage import restoration\nimport numpy as np\npsf = np.ones((3,3)) / 9\ndecon,_ = restoration.unsupervised_wiener(img,psf)\n\nplt.imshow(decon,cmap=\"gray\")\nplt.show()\n\n\n\n\n\nexample: wound healing\n\nIntroduce entropy there, in wound healing experiments, the clean images and the\n\nfrom skimage import io,restoration\nfrom skimage.filters.rank import entropy\nfrom skimage.morphology import disk\nimages_file = '/home/keke/data/web/python_for_microscopists/images/scratch.jpg'\nimg = io.imread(images_file)\nentr_img = entropy(img,disk(3))\nplt.imshow(entr_img,cmap = \"gray\")\nplt.show()\n\n# try all\nfrom skimage.filters import try_all_threshold\nfrom skimage.filters import threshold_otsu\nfig,ax = try_all_threshold(entr_img,figsize = (10,8),verbose =False)\nplt.show()\n\n# thereshold is one single number\nts_value = threshold_otsu(entr_img)\nprint(ts_value)\n\n# sum the value to get percentages\nnp.sum(entr_img < ts_value)/(np.sum(entr_img < ts_value) + np.sum(entr_img > ts_value))\n\n\n\n\n\n\n\n2.134854929499421\n\n\n0.2891522491349481"
  },
  {
    "objectID": "qmd/ml/numpy.html",
    "href": "qmd/ml/numpy.html",
    "title": "Numpy",
    "section": "",
    "text": "Print the numpy version and the configuration\n\nimport numpy as np\nprint(np.__version__)\nprint(np.show_config())\n\n1.23.5\nblas_armpl_info:\n  NOT AVAILABLE\nblas_mkl_info:\n    libraries = ['mkl_rt', 'pthread']\n    library_dirs = ['/home/keke/app/conda/envs/mi/lib']\n    define_macros = [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)]\n    include_dirs = ['/home/keke/app/conda/envs/mi/include']\nblas_opt_info:\n    libraries = ['mkl_rt', 'pthread']\n    library_dirs = ['/home/keke/app/conda/envs/mi/lib']\n    define_macros = [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)]\n    include_dirs = ['/home/keke/app/conda/envs/mi/include']\nlapack_armpl_info:\n  NOT AVAILABLE\nlapack_mkl_info:\n    libraries = ['mkl_rt', 'pthread']\n    library_dirs = ['/home/keke/app/conda/envs/mi/lib']\n    define_macros = [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)]\n    include_dirs = ['/home/keke/app/conda/envs/mi/include']\nlapack_opt_info:\n    libraries = ['mkl_rt', 'pthread']\n    library_dirs = ['/home/keke/app/conda/envs/mi/lib']\n    define_macros = [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)]\n    include_dirs = ['/home/keke/app/conda/envs/mi/include']\nSupported SIMD extensions in this NumPy install:\n    baseline = SSE,SSE2,SSE3\n    found = SSSE3,SSE41,POPCNT,SSE42,AVX,F16C,FMA3,AVX2\n    not found = AVX512F,AVX512CD,AVX512_KNL,AVX512_KNM,AVX512_SKX,AVX512_CLX,AVX512_CNL,AVX512_ICL\nNone\n\n\n\n\nCreate a null vector of size 10, and get the size\n\na = np.zeros([10])\nprint(a)\nprint(np.size(a))\n\n# get size\nprint(\"Found element \" + str(a.size) + \".\\neach element is \" + str(a.itemsize) +    \" Bytes.\\nIn total we have \"+ str(a.size * a.itemsize) +\" Bytes\")\n\n[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n10\nFound element 10.\neach element is 8 Bytes.\nIn total we have 80 Bytes\n\n\n\n\nHow to get the documentation of the numpy add function from the command line?\npython -c \"import numpy; numpy.info(numpy.add)\"\n\n\nCreate a null vector of size 10 but the fifth value which is 1\n\na = np.zeros([10])\na[4] = 1\nprint(a)\n\n[0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]\n\n\n\n\nCreate a vector with values ranging from 10 to 49, reserve it\n\nprint(np.arange(10,50))\n\n# reverse\nprint(np.arange(10,50)[::-1])\n\n[10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33\n 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49]\n[49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26\n 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10]\n\n\n\n\nCreate a 3x3 matrix with values ranging from 0 to 8\n\nnp.arange(0,9).reshape([3,3])\n\narray([[0, 1, 2],\n       [3, 4, 5],\n       [6, 7, 8]])\n\n\n\n\nFind indices of non-zero elements from an array\n\nnp.nonzero([1,0,0,1,1,0])\n\n(array([0, 3, 4]),)\n\n\n\n\nCreate a 3x3 identity matrix\n\nnp.eye(3)\n\narray([[1., 0., 0.],\n       [0., 1., 0.],\n       [0., 0., 1.]])\n\n\n\n\ncreate 3x3x3 matrix with random values\n\nnp.random.random([3,3,3])\n\narray([[[0.52218376, 0.87641244, 0.11098298],\n        [0.31160066, 0.6335614 , 0.24880885],\n        [0.153012  , 0.99825655, 0.57340254]],\n\n       [[0.3176594 , 0.15049446, 0.55008857],\n        [0.90340687, 0.82395846, 0.44713288],\n        [0.0784368 , 0.34267745, 0.43687492]],\n\n       [[0.3041583 , 0.48462958, 0.04785035],\n        [0.22980208, 0.15667806, 0.97921656],\n        [0.76076123, 0.75303314, 0.22833907]]])\n\n\n\n\nCreate a 2d array with 1 on the border and 0 insid\n\nZ=np.ones([10,10])\nZ[1:-1,1:-1] = 0\nZ\n\narray([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])\n\n\n\n\nHow to add a border (filled with 0’s) around an existing array\n\nZ = np.zeros([10,10])\n\nZ[:,[0,-1]] = 1\nZ[[0,-1],:] = 1\nZ\n\narray([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])\n\n\n\n\ntest the results\n\nprint(0 * np.nan)\nprint(np.nan == np.nan)\nprint(np.inf > np.nan)\nprint(np.nan - np.nan)\nprint(np.nan in set([np.nan]))\nprint(0.3 == 3 * 0.1)\n\nnan\nFalse\nFalse\nnan\nTrue\nFalse\n\n\n\n\nCreate a 5x5 matrix with values 1,2,3,4 just below the diagonal?\n\nZ = np.diag(1+np.arange(4),k=-1)\nprint(Z)\n\n[[0 0 0 0 0]\n [1 0 0 0 0]\n [0 2 0 0 0]\n [0 0 3 0 0]\n [0 0 0 4 0]]\n\n\n\n\nCreate a 8x8 matrix and fill it with a checkerboard pattern?\n\nZ = np.zeros((8,8),dtype=int)\nZ[1::2,::2] = 1\nZ[::2,1::2] = 1\nprint(Z)\n\n[[0 1 0 1 0 1 0 1]\n [1 0 1 0 1 0 1 0]\n [0 1 0 1 0 1 0 1]\n [1 0 1 0 1 0 1 0]\n [0 1 0 1 0 1 0 1]\n [1 0 1 0 1 0 1 0]\n [0 1 0 1 0 1 0 1]\n [1 0 1 0 1 0 1 0]]\n\n\n\n\nConsider a (6,7,8) shape array, what is the index (x,y,z) of the 100th element?\n\nprint(np.unravel_index(99,(6,7,8)))\nprint(np.unravel_index(99,(10,100)))\n\n(1, 5, 3)\n(0, 99)\n\n\n\nCreate a checkerboard 8x8 matrix using the tile function\n\nnp.tile([[1,0],[0,1]],[5,5,5]).shape\n\nnp.tile([[1,0],[0,1]],[5,5]).shape\n\n(10, 10)\n\n\n\n\nNormalize a 5x5 random matrix\n\nZ = np.random.random((3,5,7))\n# print(Z)\nprint(np.std(Z,0))\nprint(np.std(Z,1))\nprint(np.std(Z,2))\n\n[[0.33504424 0.36627027 0.1507236  0.37013153 0.29657137 0.21492768\n  0.27087881]\n [0.31417489 0.15869231 0.38345691 0.12131984 0.24945183 0.12099052\n  0.26636721]\n [0.13859722 0.34153556 0.30140397 0.34591812 0.18251695 0.26088656\n  0.11094595]\n [0.16825978 0.16253943 0.10848851 0.18703928 0.10230979 0.0547991\n  0.0394018 ]\n [0.31283174 0.20055002 0.27526963 0.24036763 0.18392773 0.20497779\n  0.11861967]]\n[[0.19707963 0.17253213 0.20799543 0.12120589 0.13191896 0.24531354\n  0.24729505]\n [0.17151724 0.38254302 0.20867791 0.21717256 0.1535064  0.13305252\n  0.18782849]\n [0.33871548 0.29527045 0.33434102 0.4240684  0.24662152 0.30332891\n  0.112215  ]]\n[[0.27602236 0.28901541 0.23159228 0.17339307 0.2544616 ]\n [0.28066126 0.29475031 0.33673633 0.21054515 0.20806011]\n [0.39432155 0.39142585 0.21221328 0.23690808 0.28773048]]\n\n\n\n\nCreate a custom dtype that describes a color as four unsigned bytes (RGBA)?\n\ncolor = np.dtype([(\"r\", np.ubyte),(\"g\", np.ubyte),(\"b\", np.ubyte),(\"a\", np.ubyte)])\nprint(color)\n\n[('r', 'u1'), ('g', 'u1'), ('b', 'u1'), ('a', 'u1')]\n\n\n\n\ndot product\n\nnp.dot(np.ones((5,3)),np.ones((3,2)))\n\nZ = np.ones((5,3)) @ np.ones((3,2))\nprint(Z)\n\n[[3. 3.]\n [3. 3.]\n [3. 3.]\n [3. 3.]\n [3. 3.]]\n\n\n\n\nGiven a 1D array, negate all elements which are between 3 and 8, in place\nwhat is the difference between and and &?\n&: is the bitwise operator\n\nnp.random.seed(1)\nZ = np.random.random((10))*10\nZ[(Z < 8) & (Z > 3)] *= -1\nZ\n\narray([-4.17022005e+00, -7.20324493e+00,  1.14374817e-03, -3.02332573e+00,\n        1.46755891e+00,  9.23385948e-01,  1.86260211e+00, -3.45560727e+00,\n       -3.96767474e+00, -5.38816734e+00])\n\n\n\n\nConsider an integer vector Z, which of these expressions are legal\n<<: bitwise operator, shift left\n>>: bitwise operator, shift right\n\nZ = 3\nZ**Z\n2 << Z >> 2\nZ <- Z\n1j*Z\nZ/1/1\nZ<Z>Z\n\nFalse\n\n\n\n\nHow to ignore all numpy warnings (not recommended)\n\ndefaults = np.seterr(all=\"ignore\")\nZ = np.ones(1) / 0\n_ = np.seterr(**defaults)\n\nwith np.errstate(all=\"ignore\"):\n    np.arange(3) / 0\n\n\n\nHow to get all the dates corresponding to the month of July 2016\n\nnp.arange('2016-07', '2016-08', dtype='datetime64[D]')\n\narray(['2016-07-01', '2016-07-02', '2016-07-03', '2016-07-04',\n       '2016-07-05', '2016-07-06', '2016-07-07', '2016-07-08',\n       '2016-07-09', '2016-07-10', '2016-07-11', '2016-07-12',\n       '2016-07-13', '2016-07-14', '2016-07-15', '2016-07-16',\n       '2016-07-17', '2016-07-18', '2016-07-19', '2016-07-20',\n       '2016-07-21', '2016-07-22', '2016-07-23', '2016-07-24',\n       '2016-07-25', '2016-07-26', '2016-07-27', '2016-07-28',\n       '2016-07-29', '2016-07-30', '2016-07-31'], dtype='datetime64[D]')\n\n\n\n\nHow to compute ((A+B)*(-A/2)) in place (without copy)?\n\nA = np.ones(3)*1\nB = np.ones(3)*2\nnp.add(A,B,out=B)\nnp.divide(A,2,out=A)\nnp.negative(A,out=A)\nnp.multiply(A,B,out=A)\n\narray([-1.5, -1.5, -1.5])\n\n\n\n\nExtract the integer part of a random array of positive numbers using 4 different methods\n\nZ = np.random.uniform(0,10,10)\n\n# 1)\nnp.divmod(Z,1)\nZ//1\n\n# 2)\nZ.astype(np.int)\n\n# 3)\nZ - Z%1\n\n# 4) \nnp.trunc(Z)\n\n/tmp/ipykernel_9636/433849477.py:8: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.\nDeprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n  Z.astype(np.int)\n\n\narray([4., 6., 2., 8., 0., 6., 4., 5., 1., 1.])\n\n\n\n\nCreate a 5x5 matrix with row values ranging from 0 to 4\n\nZ = np.zeros((5,5))\nZ[:,:] = np.arange(0,5)\nZ\n\nnp.tile(np.arange(0,5),(5,1))\n\narray([[0, 1, 2, 3, 4],\n       [0, 1, 2, 3, 4],\n       [0, 1, 2, 3, 4],\n       [0, 1, 2, 3, 4],\n       [0, 1, 2, 3, 4]])\n\n\n\n\ngenrator function\n\ndef generate():\n    for x in range(10):\n        yield x\n\nZ = np.fromiter(generate(),dtype=float,count=-1)\n\nprint(Z)\n\n[0. 1. 2. 3. 4. 5. 6. 7. 8. 9.]\n\n\n\n\nCreate a vector of size 10 with values ranging from 0 to 1, both excluded\n\n#np.random.random((10))\nZ = np.linspace(0,1,11,endpoint=False)[1:]\nZ\n\narray([0.09090909, 0.18181818, 0.27272727, 0.36363636, 0.45454545,\n       0.54545455, 0.63636364, 0.72727273, 0.81818182, 0.90909091])\n\n\n\n\nHow to sum a small array faster than np.sum?\nnp.sum\nnp.add.reduce\n\n\nConsider two random array A and B, check if they are equal\n\nA = np.array([1,2,3])\nB = np.array([1,2,3])\nnp.allclose(A,B)\nnp.equal(A,B)\n\narray([ True,  True,  True])"
  },
  {
    "objectID": "qmd/bioinformatics/omics.html",
    "href": "qmd/bioinformatics/omics.html",
    "title": "Omics field",
    "section": "",
    "text": "BeadChip(27,450K,EPIC)\n\n\n\nBisulfit techniques\n\nsingle-base resolution\nloss of complementarity(why? and how it matters?)\n\nAll Cs are converted into Us\nprobe design must be target specific and assue complete bisulfite conversion\n\n\ncompare infinium1 and infinium2?\n\n\n\n\n\n450K contains >450K probes(discontinued)\nEPIC contains >850K probes\n\n\nwhat is the basic structure of idat file format?\n\n\n\n\nwhat is SNP6.0?"
  },
  {
    "objectID": "qmd/tools/webtools.html",
    "href": "qmd/tools/webtools.html",
    "title": "webtools",
    "section": "",
    "text": "discuz with docker"
  },
  {
    "objectID": "qmd/tools/r.html#change-the-default-r-installed-library",
    "href": "qmd/tools/r.html#change-the-default-r-installed-library",
    "title": "R",
    "section": "Change the default r installed library",
    "text": "Change the default r installed library\n\ncreate the new .Renviron files\nadd the installed library\n\nR_LIBS_USER=/home/rstudio/r_lib\nR_LIBS=/home/rstudio/r_lib:/usr/local/lib/R/site-library:/usr/local/lib/R/library"
  },
  {
    "objectID": "qmd/tools/r.html#append-the-new-ld_library_path",
    "href": "qmd/tools/r.html#append-the-new-ld_library_path",
    "title": "R",
    "section": "Append the new LD_LIBRARY_PATH",
    "text": "Append the new LD_LIBRARY_PATH\nso you can use the conda to install the library\nLD_LIBRARY_PATH=/usr/local/lib/R/lib:/lib:/usr/local/lib:/usr/lib/x86_64-linux-gnu:/usr/lib/jvm/java-11-openjdk-amd64/lib/server:/home/rstudio/app/conda/lib"
  },
  {
    "objectID": "qmd/03_ml/01_index.html",
    "href": "qmd/03_ml/01_index.html",
    "title": "Machine learning",
    "section": "",
    "text": "Machine learning"
  },
  {
    "objectID": "qmd/04_tools/13_r.html",
    "href": "qmd/04_tools/13_r.html",
    "title": "R",
    "section": "",
    "text": "what is call2\n\n# call2\ncall2(\"fun_name\",1,2,3)\nfun_name(1,2,3)\n\n\n\nexpr/enexpr and eval\n\nstring_math <- function(x) {\n  e <- env(\n    caller_env(),\n    `+` = function(x, y) paste0(x, y),\n    `*` = function(x, y) strrep(x, y)\n  )\n\n  eval(enexpr(x), e)\n}\n\nname <- \"Hadley\"\nstring_math(\"Hello \" + name)\n#> [1] \"Hello Hadley\"\nstring_math((\"x\" * 2 + \"-y\") * 3)\n#> [1] \"xx-yxx-yxx-y\"\n\n\n\n\n\n\n\n\n\nsubstittue <-> unquote"
  },
  {
    "objectID": "qmd/04_tools/13_r.html#change-the-default-r-installed-library",
    "href": "qmd/04_tools/13_r.html#change-the-default-r-installed-library",
    "title": "R",
    "section": "Change the default r installed library",
    "text": "Change the default r installed library\n\ncreate the new .Renviron files\nadd the installed library\n\nR_LIBS_USER=/home/rstudio/r_lib\nR_LIBS=/home/rstudio/r_lib:/usr/local/lib/R/site-library:/usr/local/lib/R/library"
  },
  {
    "objectID": "qmd/04_tools/13_r.html#append-the-new-ld_library_path",
    "href": "qmd/04_tools/13_r.html#append-the-new-ld_library_path",
    "title": "R",
    "section": "Append the new LD_LIBRARY_PATH",
    "text": "Append the new LD_LIBRARY_PATH\nso you can use the conda to install the library\nLD_LIBRARY_PATH=/usr/local/lib/R/lib:/lib:/usr/local/lib:/usr/lib/x86_64-linux-gnu:/usr/lib/jvm/java-11-openjdk-amd64/lib/server:/home/rstudio/app/conda/lib"
  },
  {
    "objectID": "qmd/04_tools/15_docker.html",
    "href": "qmd/04_tools/15_docker.html",
    "title": "Docker",
    "section": "",
    "text": "install docker\n\nhttps://docs.docker.com/engine/install/binaries/\nhttps://www.kali.org/docs/containers/installing-docker-on-kali/\n\ndocker basic commnad\n\n# docker version\n# containers\ndocker ps\ndocker ps -a\ndocker stop <id>\n\n# showing images\ndocker images\n# remove images\ndocker rmi\n\n# pull images \ndocker pull <iamge>\n\n# pull and run images\ndocker run <iamge:tag>\n\n# run ubuntu\ndocker run ubuntu sleep 100 \n\n# run: attach detached\ndocker run -d <container>\n\ndocker attach <id>\n\n# inspect containder\ndocker inspect <id>\n\n# check logs\ndocker logs <id>\n\ndocker params\n\n-i: interactive mode\n-t: pesuodo terminal\n-p: port mapping\neach container has its own ip, which can only be acessed in containder host\n-v: volumn mappping -> data persistent\n-e: set enviroment variables\n\ncreate images\n\nFROM Ubuntu\n\nRUN apt-get update\nRUN apt-get install python\n\nRUN pip install flask\n\nCOPY . ???\n\nENTRYPOINT ???\n\nCMD [\"command\", \"param1\"]\ndocker build Dockerfile -t <image_name>"
  },
  {
    "objectID": "qmd/04_tools/15_docker.html#create-a-rstudio-images",
    "href": "qmd/04_tools/15_docker.html#create-a-rstudio-images",
    "title": "Docker",
    "section": "1) create a rstudio images",
    "text": "1) create a rstudio images\n\nWhat to containrize?\n\nubuntu\nrstudio\nr\nr-packages\nothers\n\nProcedures\n\ninstall docker\nwriting Dockerfile\nsudo docker build -t <image_name>:<tag> .\nsudo docker build -t <image_name>:<tag> . 2>&1 | tee build.log\n\n\nsudo docker run –rm -it –entrypoint bash rs_test:4.1\nsudo docker build -t rs_test:4.1 . 2>&1 | tee build.log\n\nQ&A\n\nhow to specific r version?\n\napt-get install -y --no-install-recommends r-base=4.1.2*\n\nhow to give interactive shell like zsh or R?\n\ndocker run --rm -it --entrypoint bash <image_name>\n\nhow to install r packages, and solve the install.packages error\n\nAs install.packages did not give the error, so using library to see if packages could be loaded\ndevtools::install_version returned error if not loaded"
  },
  {
    "objectID": "qmd/04_tools/15_docker.html#wordpress-with-docker",
    "href": "qmd/04_tools/15_docker.html#wordpress-with-docker",
    "title": "Docker",
    "section": "2) wordpress with docker",
    "text": "2) wordpress with docker\n\noption 1. build your own docker file\nhttps://github.com/aschmelyun/docker-compose-wordpress\n\n\noption2: pull official website"
  },
  {
    "objectID": "qmd/04_tools/15_docker.html#discuz-with-docker",
    "href": "qmd/04_tools/15_docker.html#discuz-with-docker",
    "title": "Docker",
    "section": "3) discuz with docker",
    "text": "3) discuz with docker"
  },
  {
    "objectID": "qmd/04_tools/12_restful.html",
    "href": "qmd/04_tools/12_restful.html",
    "title": "restful",
    "section": "",
    "text": "what is restful api\nThe full name is …\nHow to use it (if websites have api)?\nconstruct the paper\nAre there tools available that would make this simple for us?\nHow to achieve/implement it with Python programming?\nusing ensemle api"
  },
  {
    "objectID": "qmd/04_tools/01_index.html",
    "href": "qmd/04_tools/01_index.html",
    "title": "Tools",
    "section": "",
    "text": "This is about useful tools that could help improve us to do bioinformatics job."
  },
  {
    "objectID": "qmd/04_tools/11_git.html",
    "href": "qmd/04_tools/11_git.html",
    "title": "git",
    "section": "",
    "text": "Q&A\n\ngit globa options\n# show global options\ngit config --list\n\n# set git editor\ngit config --global core.editor \"code --wait\"\ngit config -e \ngit config --global -e \nget git status short\ngit status \ngit status -s\ncreate new branch\n# create new brance\ngit checkout -b <newbranch>\n\n# back to mater\ngit checkout master\n\n# merge new brache into master(should be in master branche)\ngit merge <newbranch>\nclone with ssh\ngit clone username@ip_address:/path/to/your/git\nbuild the data\n# 1) build new data\ngit init\n\n# 2) rename branch\ngit rename -m master current\n\n# 3) add remote data\ngit remote add <repo-name> username@ip_address:/path/to/your/git\n\n# 4) pull or push\ngit pull \ngit push"
  },
  {
    "objectID": "qmd/04_tools/16_web.html",
    "href": "qmd/04_tools/16_web.html",
    "title": "Web",
    "section": "",
    "text": "setup a squid server\nhttps://www.digitalocean.com/community/tutorials/how-to-set-up-squid-proxy-on-ubuntu-20-04\n# 1) install\napt-get install squid\nsystemctl status squid\n\n# 2) allow ip, find `http_access deny ` to allow or deny ip, could set `http_access allow all`\nvim /etc/squid/squid.conf\n\n# 3) set password\napt install apache2-utils\nhtpasswd -c /etc/squid/passwords <user_name>\n\n# 4) check \ncat /etc/squid/passwords\n\n# 5) reopen, add params for authentication\nvim /etc/squid/squid.conf\n\n# INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR CLIENTS\n#\ninclude /etc/squid/conf.d/*\n#######################ADD#########################\nauth_param basic program /usr/lib/squid3/basic_ncsa_auth /etc/squid/passwords\nauth_param basic realm proxy\nacl authenticated proxy_auth REQUIRED\n#######################ADD#########################\n\n# Example rule allowing access from your local networks.\nacl localnet src your_ip_address\n# Adapt localnet in the ACL section to list your (internal) IP networks\n# from where browsing should be allowed\n#http_access allow localnet\nhttp_access allow localhost\n\n#######################ADD#########################\nhttp_access allow authenticated\n#######################ADD#########################\n\n# And finally deny all other access to this proxy\nhttp_access deny all\n\n# 6) you could change the port if you want\nufw allow 7001\nvim /etc/squid/squid.conf\n\nhttp_port 3128\n\n# 7) test it \n\ncurl -OJ  https://api.gdc.cancer.gov/data/c0008693-0583-4eac-bd5c-583070763893   --proxy \"http://<user_name>:<passwd>@<address>:<port>\"\n\n\nhow to monitor the network dataflow"
  },
  {
    "objectID": "qmd/04_tools/14_quarto_tools.html",
    "href": "qmd/04_tools/14_quarto_tools.html",
    "title": "quarto tools",
    "section": "",
    "text": "citation\n\nyour should prepare\n\ncsl file: download from github\nhttps://github.com/citation-style-language/styles\nbib: you could prepare using endnote\n@article{knuth:1984,\n  title={Literate Programming},\n  author={Donald E. Knuth},\n  journal={The Computer Journal},\n  volume={27},\n  number={2},\n  pages={97--111},\n  year={1984},\n  publisher={Oxford University Press}\n}\n\ninclude it in the qmd yaml header; use with [@index] ; insert the reference\n---\ntitle: \"cite demo\"\nbibliography: references.bib\n---\nsome words[@knuth:1984]\n\n## References\n::: {#refs}\n:::"
  },
  {
    "objectID": "qmd/01_bioinformatics/21_sc.html",
    "href": "qmd/01_bioinformatics/21_sc.html",
    "title": "single cell",
    "section": "",
    "text": "please go to: [https://sci-hub.mksa.top/10.1038/s41596-021-00534-0]"
  },
  {
    "objectID": "qmd/01_bioinformatics/21_sc.html#example",
    "href": "qmd/01_bioinformatics/21_sc.html#example",
    "title": "single cell",
    "section": "example",
    "text": "example\n\nDownload example data\ncurl -O https://cf.10xgenomics.com/supp/cell-exp/cellranger-tiny-bcl-1.2.0.tar.gz\ncurl -O https://cf.10xgenomics.com/supp/cell-exp/cellranger-tiny-bcl-simple-1.2.0.csv\ntar -zxvf cellranger-tiny-bcl-1.2.0.tar.gz\nmdkfastq\ncellranger mkfastq --id=tutorial_walk_through \\\n    --run=cellranger-tiny-bcl-1.2.0 \\\n    --csv=cellranger-tiny-bcl-simple-1.2.0.csv\ncount\ncurl -O  https://cf.10xgenomics.com/samples/cell-exp/3.0.0/pbmc_1k_v3/pbmc_1k_v3_fastqs.tar\ncellranger count --id=run_count_1kpbmcs \\\n    --fastqs=pbmc_1k_v3_fastqs \\\n    --sample=pbmc_1k_v3 \\\n    --transcriptome=/home/keke/data2/ref/refdata-gex-GRCh38-2020-A\\\n    --noexit\n\n4 Q&A\n1. fastq-input for cellranger?\n\n    * https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/using/fastq-input\n\n2. How to do when facing erros?\n\n    * google\n\n    * re-run\n\n    * re-boot\n\n    * pray to god"
  },
  {
    "objectID": "qmd/04_tools/15_docker.html#docker-app",
    "href": "qmd/04_tools/15_docker.html#docker-app",
    "title": "Docker",
    "section": "Docker app",
    "text": "Docker app\n\nrstudio config\n\nHave a rstudio in docker(version=4.2)\n\nhttps://rocker-project.org/images/versioned/rstudio.html\nhttps://hub.docker.com/r/rocker/rstudio\n# pull images (Make sure the version is what you want)\ndocker pull rocker/rstudio:4.2\n\n# run it (should not change the image port in this case), with password\n# inorder to make it configuration persistent, your should map the /home/rstudio/ directory with the same directory(In which you saved the configurations previously)\ndocker run --rm -ti -e PASSWORD=<passwd> -v /home/keke/data/tutorial/docker/rs1:/home/rstudio/ -p 8686:8787 rocker/rstudio:4.2\n\n# how to make packages persistent and rstudio configs persistent \n# 1) Check the libs path `.libPaths()`\n# 2) rewrite the `.Renviron` with  `R_LIBS_USER` and `R_LIBS`\n# 3) relaod `R` and install the packages\n# 4) your could check the `r_lib` fold first then reload the docker images to see if the package could be reloaded\nmkdir ~/.Renviron\nR_LIBS_USER=/home/rstudio/r_lib\nR_LIBS=/home/rstudio/r_lib:/usr/local/lib/R/site-library:/usr/local/lib/R/library\n\n\n# mount a second volumn\ndocker run --rm -ti \\\n    -e PASSWORD=happy_password\\\n    -v /home/keke/data/tutorial/docker/rs1:/home/rstudio/\\\n    -v /home/keke/data/:/home/rstudio/data/\\\n    -p 8686:8787 \\\n    rocker/rstudio:4.2\n# run in background(--detached -d)\ndocker run --rm -ti \\\n    -e PASSWORD=happy_password\\\n    -d\\\n    -v /home/keke/data2/docker/rstudio/rs1:/home/rstudio/\\\n    -v /home/keke/data/:/home/rstudio/data/\\\n    -p 8686:8787 \\\n    rocker/rstudio:4.2\n\n# stop it \ndocker stop <CONTAINER ID>\n\n\nrun docker without root permission\n\n\nrun ubuntu\ndocker run ubuntu sleep 5\n\n\n\ndocker network\n* bride[default]:  `docker run ubuntu`\n\n* none:  `docker run ubuntu --network=none`\n\n* host:  `docker run ubuntu --network=host`\n\n* create sub network\n\n\nvolumns\ndocker volumne create data_volumn\n* -v\n\n* --mount\n\n\ndocker-compose\n\n\ndocker registry\n\nprivate\n\ndocker run -d --name registry\n\ndocker image tag my-image localhost:5000/my-image\ndocker push localhost:5000/my-image\ndocker pull localhost:5000/my-image\n\n\norchestrate\n\n\ndocker swarm\ndocker service --replicas=3 my-web\n\n\n\nkubernetes"
  },
  {
    "objectID": "qmd/04_tools/16_linux.html",
    "href": "qmd/04_tools/16_linux.html",
    "title": "Linux tools",
    "section": "",
    "text": "how to proxy?\nwho to reverse proxy?\nhow to add https\nnginx.conf contains\n\nhttp serve the directory\nevents\nMINE\nnigix comes with default MINE types\nlocation\nalias\ntry_files\nrewrite and redirect\n\nhttp {\n    # MINE teypes\n    #types {\n    #    text/css css;\n    #    text/html html;\n    #}\n\n    include mime.types\n\n    # server\n    server {\n        listen 80;\n        root /path;\n\n        # get locations\n        location /fruits{\n            root /path ;\n        }\n\n        location /carbs{\n            alias /path/fruits;\n\n        }\n\n        # try files\n        location /veges{\n            root /path;\n            try_files /veges/vege.html /veges/index.html = 404;\n        }\n\n        # count regular expression ~* => regular expression\n        location ~* /count/[0-9]{\n            root /path\n            try_files /index.html =404;\n        }\n\n        # return\n        location /crops {\n            return 307 /fruits;\n        }\n\n        # rewrite/redirect\n        rewrite ^/number/(\\w+) /counts/$1\n    }\n}\nload balancer"
  },
  {
    "objectID": "qmd/04_tools/16_linux.html#how-to-install",
    "href": "qmd/04_tools/16_linux.html#how-to-install",
    "title": "Linux tools",
    "section": "how to install?",
    "text": "how to install?\n\nall in one\nDistributed\n\nhttps://socfortress.medium.com/installing-the-new-wazuh-version-4-4-the-socfortress-way-ea3a8030d94b\n\nWazuh Indexer\nwhat is memory locking?\n\n\nWazuh Dashboard\n\n\nGraylog\n\n\nWazuh Manager"
  },
  {
    "objectID": "qmd/01_bioinformatics/01_index.html",
    "href": "qmd/01_bioinformatics/01_index.html",
    "title": "Bioinformatics",
    "section": "",
    "text": "Bioinformatics tutorial"
  }
]